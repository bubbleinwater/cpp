/*
9.26.2018
chapter 8 exercise 7.


Q.Read five names in a vector<string> name, then prompt the user for the ages of the people named  and store the ages in
a vector<double> age. Then print out the five (name[i],age[i]) pairs. Sort the names ( sort(name.begin(),name.end()) ) and print out the
(name[i],age[i]) pairs.
The tricky part here is to get the age vector in the correct order to match the sorted name vector.
Hint:Before sorting name, take a copy and use that to make a copy of a age in the right order after sorting name.
*/



#include"std_lib_facilities.h"

int main() {
	string val;
	double num;
	vector<string> name;  //" Should I write as vector<string> name(5); here? and if the user enter more than five names then throw an error?"
	vector<double> age;	//yes.you should. and this is exercise 8.
	
	while (cin>>val) {
		if (val == "exit")break;
		cin >> num;
		if (num < 0)error("error:do not enter negative number.");
		name.push_back(val);
		age.push_back(num);
	}

	for (int i = 0; i < name.size(); ++i) {
		cout << name[i] << " " << age[i] << '\n';
	}

	vector<string> before_sort_name;
	for (int i = 0; i < name.size(); ++i) {
		before_sort_name.push_back(name[i]);
	}

	sort(name.begin(), name.end());

	for (int i = 0; i < name.size(); ++i) {
		for (int j = i; j < name.size(); ++j) {
			if (name[i] == before_sort_name[j]) {
				int temp;
				temp = age[j];
				age[j] = age[i];
				age[i] = temp;
			}
		}
	}
	cout << "sorted.\n";
	for (int i = 0; i < name.size(); ++i) {
		cout << name[i] << " " << age[i] << '\n';
	}

	cin.clear();
	cin.ignore();
	keep_window_open();
	return 0;
}
