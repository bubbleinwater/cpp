/*
Q.Write a fuction that takes a vector<string> argument and returns a vector<int> containing the number of
characters in each string. Also find the longest and the shortest string and the lexicographically first
and last string.
 How many separate functions would you use for these tasks? Why?

q1.how many separate functions? A. 4?
q2.Why? A. for keep codes maintenance easily.(? I think?),you should divide them as smaller
as you can.(?) can I divide them more smaller? 

*/




#include"std_lib_facilities.h"

int how_many_ch(string s) {
	return s.size();
}

vector<int> vector_how_many_ch(vector<string> s) {
	vector<int> vhmc;
	string longest, shortest;
	for (int i = 0; i < s.size(); ++i) {
		if (i == 0) {
			shortest = s[i];
			longest = s[i];
		}
		else {
			if (shortest.size() > s[i].size()) { shortest = s[i]; }
			if (longest.size() < s[i].size()) { longest = s[i]; }
		}
		vhmc.push_back(how_many_ch(s[i]));
	}

	cout << "The longest string is " << longest << " and the shortest string is " << shortest << '\n';
	
	sort(s);
	cout << "lexicographically, the first one is " << s[0] 
	<< "\nand the last one is " << s[s.size()-1] << '\n';

	return vhmc;
}



/*

int main() {

	vector<string>s_v;
	string s;
	while(cin>>s)
	{
		if (s == "exit")break;
		else s_v.push_back(s);
	}

	vector<int>num = vector_how_many_ch(s_v);

	for (int x : num)cout << "\n" << x;
	cout << '\n';

	keep_window_open();
	return 0;
}

*/
